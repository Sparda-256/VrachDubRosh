<Window x:Class="VrachDubRosh.AddEditAccompanyingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Добавление сопровождающего" 
        Height="500" Width="600"
        MinHeight="400" MinWidth="550"
        Background="{DynamicResource BackgroundBrush}"
        Icon="/icodubrosh.png"
        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResizeWithGrip"
        BorderThickness="0"
        WindowStyle="SingleBorderWindow">
    <Window.Resources>
        <!-- Кнопка стандартная -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Красная кнопка -->
        <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
            <Setter Property="Background" Value="#F44336"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D32F2F"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#B71C1C"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Текстовое поле -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border CornerRadius="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          VerticalScrollBarVisibility="Hidden"
                                          HorizontalScrollBarVisibility="Hidden"
                                          Background="Transparent" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- DatePicker стиль -->
        <Style x:Key="RoundedDatePickerStyle" TargetType="DatePicker">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border CornerRadius="6" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <DatePickerTextBox x:Name="PART_TextBox" 
                                         Grid.Column="0" 
                                         Focusable="True"
                                         HorizontalContentAlignment="Left"
                                         VerticalContentAlignment="Center"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Margin="8,0"
                                         Foreground="{DynamicResource ForegroundBrush}"
                                         Background="Transparent"
                                         BorderThickness="0"/>
                                <Button x:Name="PART_Button" 
                              Grid.Column="1"
                              Focusable="False"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Margin="0,0,8,0"
                              Width="20"
                              Height="20"
                              Background="Transparent"
                              BorderThickness="0">
                                    <Button.Content>
                                        <Path Fill="{DynamicResource SubtitleBrush}" Data="M 0,0 L 0,12 12,12 12,0 Z M 1,1 L 1,3 11,3 11,1 Z M 1,4 L 1,11 11,11 11,4 Z M 3,6 L 5,6 5,8 3,8 Z M 6,6 L 8,6 8,8 6,8 Z M 9,6 L 11,6 11,8 9,8 Z M 3,9 L 5,9 5,11 3,11 Z M 6,9 L 8,9 8,11 6,11 Z M 9,9 L 11,9 11,11 9,11 Z"/>
                                    </Button.Content>
                                </Button>
                                <Popup x:Name="PART_Popup" 
                             StaysOpen="False"
                             AllowsTransparency="True"
                             PopupAnimation="Slide"
                             PlacementTarget="{Binding ElementName=PART_Button}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ComboBox стиль -->
        <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" 
                              ClickMode="Press" 
                              Focusable="false"
                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              IsHitTestVisible="True">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="templateRoot" CornerRadius="6" 
                                        Background="{DynamicResource InputBackgroundBrush}" 
                                        BorderBrush="{DynamicResource BorderBrush}" 
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Leave empty for content presenter -->
                                                <Path Grid.Column="1" 
                                            Width="10" Height="6" 
                                            Margin="0,0,8,0"
                                            Fill="{DynamicResource SubtitleBrush}"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource BorderHoverBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <!-- Content presenter for selected item -->
                            <ContentPresenter x:Name="ContentSite" 
                                  Content="{TemplateBinding SelectionBoxItem}" 
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  IsHitTestVisible="False"
                                  Margin="8,0,30,0"
                                  VerticalAlignment="Center"/>
                            <Popup Name="Popup" 
                         Placement="Bottom"
                         IsOpen="{TemplateBinding IsDropDownOpen}"
                         Focusable="False" 
                         AllowsTransparency="True"
                         PopupAnimation="Slide">
                                <Grid Name="DropDown" 
                          SnapsToDevicePixels="True"
                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                          MinWidth="{TemplateBinding ActualWidth}">
                                    <Border CornerRadius="0,0,6,6" 
                                 Background="{DynamicResource InputBackgroundBrush}" 
                                 BorderBrush="{DynamicResource BorderBrush}" 
                                 BorderThickness="1">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- CheckBox стиль -->
        <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="Border" Width="20" Height="20" 
                                    CornerRadius="4" Margin="0,0,8,0"
                                    BorderThickness="1" 
                                    BorderBrush="{DynamicResource BorderBrush}" 
                                    Background="{DynamicResource InputBackgroundBrush}">
                                <Path x:Name="Checkmark" 
                                      Visibility="Collapsed"
                                      Width="10" Height="10" 
                                      Stretch="Uniform" 
                                      Fill="{DynamicResource AccentBrush}" 
                                      Data="M 0 5 L 3 8 L 8 0 L 10 2 L 3 10 L -2 5 Z"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Checkmark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderHoverBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Viewbox Stretch="Uniform">
        <Grid Width="560" Height="460" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Заголовок -->
            <TextBlock Grid.Row="0" Text="Информация о сопровождающем" 
                   FontSize="22" FontWeight="Bold" 
                   Foreground="{DynamicResource AccentBrush}" 
                   Margin="0,0,0,20"/>

            <!-- Основная форма -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Пациент -->
                <Label Grid.Row="0" Grid.Column="0" Content="Пациент:" 
                       Foreground="{DynamicResource ForegroundBrush}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,10,15"/>
                <Grid Grid.Row="0" Grid.Column="1" Margin="0,0,0,15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" x:Name="txtPatientSearch" 
                             Style="{StaticResource RoundedTextBoxStyle}" 
                             Margin="0,0,0,5"
                             TextChanged="txtPatientSearch_TextChanged"
                             ToolTip="Введите имя пациента для поиска">
                        <TextBox.Resources>
                            <Style TargetType="TextBox" BasedOn="{StaticResource RoundedTextBoxStyle}">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <VisualBrush Stretch="None" TileMode="None" Opacity="0.5" AlignmentX="Left">
                                                    <VisualBrush.Visual>
                                                        <TextBlock Text="Поиск пациента..." Foreground="{DynamicResource SubtitleBrush}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <ComboBox Grid.Row="1" x:Name="cbPatients" 
                              Style="{StaticResource RoundedComboBoxStyle}" 
                              DisplayMemberPath="FullName"
                              SelectedValuePath="PatientID"/>
                </Grid>

                <!-- ФИО -->
                <Label Grid.Row="1" Grid.Column="0" Content="ФИО сопровождающего:" 
                       Foreground="{DynamicResource ForegroundBrush}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,10,15"/>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="txtFullName" 
                         Style="{StaticResource RoundedTextBoxStyle}" 
                         Margin="0,0,0,15"/>

                <!-- Дата рождения -->
                <Label Grid.Row="2" Grid.Column="0" Content="Дата рождения:" 
                       Foreground="{DynamicResource ForegroundBrush}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,10,15"/>
                <DatePicker Grid.Row="2" Grid.Column="1" x:Name="dpDateOfBirth" 
                            Style="{StaticResource RoundedDatePickerStyle}" 
                            Margin="0,0,0,15"/>

                <!-- Отношение к пациенту -->
                <Label Grid.Row="3" Grid.Column="0" Content="Отношение к пациенту:" 
                       Foreground="{DynamicResource ForegroundBrush}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,10,15"/>
                <ComboBox Grid.Row="3" Grid.Column="1" x:Name="cbRelationship" 
                          Style="{StaticResource RoundedComboBoxStyle}" 
                          Margin="0,0,0,15">
                    <ComboBoxItem Content="Родитель"/>
                    <ComboBoxItem Content="Опекун"/>
                    <ComboBoxItem Content="Бабушка/Дедушка"/>
                    <ComboBoxItem Content="Другой родственник"/>
                    <ComboBoxItem Content="Иное лицо"/>
                </ComboBox>

                <!-- Доверенность -->
                <Label Grid.Row="4" Grid.Column="0" Content="Доверенность:" 
                       Foreground="{DynamicResource ForegroundBrush}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,10,15"/>
                <Grid Grid.Row="4" Grid.Column="1" Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="txtPowerOfAttorneyStatus" 
                               Text="Не требуется" 
                               Foreground="{DynamicResource SubtitleBrush}"
                               VerticalAlignment="Center"/>
                    <Button x:Name="btnUploadPowerOfAttorney" 
                            Content="Загрузить" 
                            Grid.Column="1"
                            Style="{StaticResource RoundedButtonStyle}" 
                            Width="120" Height="30"
                            Click="btnUploadPowerOfAttorney_Click"
                            Visibility="Collapsed"/>
                </Grid>
                
                <!-- Примечание о доверенности -->
                <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"
                           Text="Примечание: Доверенность от законных представителей требуется, если сопровождающий не является родителем или официальным опекуном пациента."
                           Foreground="{DynamicResource SubtitleBrush}"
                           TextWrapping="Wrap" 
                           Margin="0,10,0,0"/>
            </Grid>

            <!-- Кнопки -->
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                <Button Content="Отмена" Style="{StaticResource RedButtonStyle}" 
                        Width="120" Height="40" Margin="0,0,15,0"
                        Click="btnCancel_Click"/>
                <Button Content="Сохранить" Style="{StaticResource RoundedButtonStyle}" 
                        Width="120" Height="40"
                        Click="btnSave_Click"/>
            </StackPanel>
        </Grid>
    </Viewbox>
</Window> 