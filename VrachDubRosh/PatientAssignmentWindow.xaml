<Window x:Class="VrachDubRosh.PatientAssignmentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Врач ДубРощ - Назначение врачей пациенту" 
        Height="490" Width="550"
        Background="{DynamicResource BackgroundBrush}"
        Icon="/icodubrosh.png"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip"
        BorderThickness="0"
        WindowStyle="SingleBorderWindow">
    <Window.Resources>
        <!-- Кнопка стандартная -->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentPressedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Красная кнопка -->
        <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
            <Setter Property="Background" Value="#F44336"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D32F2F"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#B71C1C"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Стиль для CheckBox -->
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid x:Name="templateRoot" 
                              Background="Transparent" 
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" 
                                   BorderBrush="{DynamicResource AccentBrush}" 
                                   BorderThickness="2" 
                                   Background="Transparent" 
                                   CornerRadius="3" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   Width="18" 
                                   Height="18">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" 
                                         Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
                                         Fill="{DynamicResource ThemeToggleBrush}" 
                                         Opacity="0" 
                                         Stretch="Uniform" 
                                         VerticalAlignment="Center" 
                                         HorizontalAlignment="Center" 
                                         Margin="2"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" 
                                             ContentTemplate="{TemplateBinding ContentTemplate}" 
                                             Content="{TemplateBinding Content}" 
                                             Grid.Column="1" 
                                             HorizontalAlignment="Left" 
                                             VerticalAlignment="Center" 
                                             Margin="{TemplateBinding Padding}" 
                                             RecognizesAccessKey="True" 
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для ListView -->
        <Style x:Key="ModernListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border CornerRadius="6" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border x:Name="Border" 
                                            Background="{TemplateBinding Background}" 
                                            BorderThickness="0"
                                            Padding="{TemplateBinding Padding}">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource SelectionBrush}" TargetName="Border"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource SelectionBrush}" TargetName="Border"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Viewbox Stretch="Uniform">
        <Grid Width="500" Height="420" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Информация о пациенте -->
            <TextBlock x:Name="txtPatientInfo" 
                       FontSize="18" FontWeight="Bold" Foreground="{DynamicResource AccentBrush}"
                       Grid.Row="0" Margin="0,0,0,15" HorizontalAlignment="Center"
                       TextWrapping="Wrap" TextAlignment="Center"/>
            
            <!-- Список врачей с чекбоксами -->
            <ListView x:Name="lvDoctors" Grid.Row="1" 
                      Style="{StaticResource ModernListViewStyle}"
                      Margin="0,0,0,15" Padding="5">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent" Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox IsChecked="{Binding IsAssigned, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Grid.Column="0"
                                     Style="{StaticResource CustomCheckBoxStyle}"/>
                            <TextBlock Text="{Binding FullName}" 
                                     Grid.Column="1"
                                     VerticalAlignment="Center" 
                                     FontSize="14" 
                                     Foreground="{DynamicResource ForegroundBrush}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
            <!-- Кнопки сохранения/отмены -->
            <StackPanel Grid.Row="2" Orientation="Horizontal" 
                        HorizontalAlignment="Right" Margin="0,5,0,0">
                <Button Width="120" Height="35" Margin="5,0"
                        Style="{StaticResource RoundedButtonStyle}"
                        Click="btnSave_Click">
                    <StackPanel Orientation="Horizontal">
                        <Path Width="18" Height="18" 
                              Data="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z"
                              Fill="White"
                              Stretch="Uniform"/>
                        <TextBlock Text="Сохранить" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="White"/>
                    </StackPanel>
                </Button>
                <Button Width="120" Height="35" Margin="5,0"
                        Style="{StaticResource RedButtonStyle}"
                        Click="btnCancel_Click">
                    <StackPanel Orientation="Horizontal">
                        <Path Width="18" Height="18" 
                              Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                              Fill="White"
                              Stretch="Uniform"/>
                        <TextBlock Text="Отмена" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="White"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
    </Viewbox>
</Window>
